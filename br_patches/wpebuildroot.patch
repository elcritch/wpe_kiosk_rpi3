diff --git a/package/cog/Config.in b/package/cog/Config.in
index 768fcef..f88ec76 100644
--- a/package/cog/Config.in
+++ b/package/cog/Config.in
@@ -1,27 +1,53 @@
-comment "cog needs wpewebkit and a toolchain w/ threads"
-	depends on BR2_USE_MMU
-	depends on !BR2_PACKAGE_WPEWEBKIT || !BR2_TOOLCHAIN_HAS_THREADS
-
 config BR2_PACKAGE_COG
 	bool "cog"
 	depends on BR2_PACKAGE_WPEWEBKIT
-	depends on BR2_TOOLCHAIN_HAS_THREADS # dbus
-	depends on BR2_USE_MMU # dbus
-	select BR2_PACKAGE_DBUS
 	help
-	  Single "window" launcher for the WebKit WPE port, and
+	  Single “window” launcher for the WebKit WPE port, and
 	  helper library for implementing WPE launcher. It does
 	  not provide any chrome, and is suitable to be used
 	  as a Web application container.
 
 if BR2_PACKAGE_COG
 
+config BR2_PACKAGE_COG_PLATFORM_FDO_ARCH_SUPPORTS
+	bool
+	default y
+	depends on BR2_PACKAGE_HAS_LIBEGL_WAYLAND
+	depends on BR2_PACKAGE_HAS_LIBGLES
+	depends on BR2_PACKAGE_WPEBACKEND_FDO
+
+comment "cog fdo platform plugin requires egl, gles, wayland"
+	depends on !BR2_PACKAGE_COG_PLATFORM_FDO_ARCH_SUPPORTS
+
+config BR2_PACKAGE_COG_PLATFORM_FDO
+	bool "fdo platform"
+	depends on BR2_PACKAGE_COG_PLATFORM_FDO_ARCH_SUPPORTS
+	help
+	  Support platform plug-in which uses FreeDesktop.Org's
+	  technologies for windowing. Choose this to support output
+	  to Wayland compositor.
+
+config BR2_PACKAGE_COG_PROGRAMS
+	bool "build and install programs"
+	help
+	  Build and install the "cog" and "cogctl" programs.
+
+if BR2_PACKAGE_COG_PROGRAMS
+
+config BR2_PACKAGE_COG_PROGRAMS_DBUS_SYSTEM_BUS
+	bool "expose remote control interface on system bus"
+	help
+	  If enabled, the D-Bus remote control interface is exposed
+	  on the system bus, instead of the session bus.
+
 config BR2_PACKAGE_COG_PROGRAMS_HOME_URI
 	string "home uri"
-	default "https://wpewebkit.org"
+	default ""
 	help
 	  Default URI to open when "cog" is launched. If an empty
 	  string is used, there is no default and the URI to open
 	  must be always specified in the command line.
 
 endif
+
+endif
diff --git a/package/cog/cog.hash b/package/cog/cog.hash
index 97daf72..9821154 100644
--- a/package/cog/cog.hash
+++ b/package/cog/cog.hash
@@ -1,5 +1,2 @@
 # Locally generated
-sha256 a6abadb78395226bac2e1dd5467feab2cc8c493eab6894a09a51a8e072e38c06  cog-v0.2.0.tar.gz
-
-# Hashes for license files:
-sha256 e6c42d93c68b292bcccf6d2ec3e13da85df90b718ba27c2c2a01053a9d009252  COPYING
+sha256 7a3d4c133b4873caf86e0e2b393adea06ad7907609dae5f73d80b530840456dc cog-063df115456a24e464d1e6f284df22a0e65aea8e.tar.gz
diff --git a/package/cog/cog.mk b/package/cog/cog.mk
index 43f1315..212233a 100644
--- a/package/cog/cog.mk
+++ b/package/cog/cog.mk
@@ -4,14 +4,31 @@
 #
 ################################################################################
 
-COG_VERSION = v0.2.0
+COG_VERSION = 063df115456a24e464d1e6f284df22a0e65aea8e
 COG_SITE = $(call github,Igalia,cog,$(COG_VERSION))
-COG_DEPENDENCIES = dbus wpewebkit wpebackend-fdo
+COG_DEPENDENCIES = libglib2 libwpe wpewebkit
 COG_LICENSE = MIT
 COG_LICENSE_FILES = COPYING
 COG_CONF_OPTS = \
-	-DCOG_BUILD_PROGRAMS=ON \
-	-DCOG_PLATFORM_FDO=ON \
 	-DCOG_HOME_URI='$(call qstrip,$(BR2_PACKAGE_COG_PROGRAMS_HOME_URI))'
 
+ifeq ($(BR2_PACKAGE_COG_PLATFORM_FDO),y)
+COG_DEPENDENCIES += libegl libgles wayland wpebackend-fdo
+COG_CONF_OPTS += -DCOG_PLATFORM_FDO=ON
+else
+COG_CONF_OPTS += -DCOG_PLATFORM_FDO=OFF
+endif
+
+ifeq ($(BR2_PACKAGE_COG_PROGRAMS),y)
+COG_CONF_OPTS += -DCOG_BUILD_PROGRAMS=ON
+else
+COG_CONF_OPTS += -DCOG_BUILD_PROGRAMS=OFF
+endif
+
+ifeq ($(BR2_PACKAGE_COG_PROGRAMS_DBUS_SYSTEM_BUS),y)
+COG_CONF_OPTS += -DCOG_DBUS_SYSTEM_BUS=ON
+else
+COG_CONF_OPTS += -DCOG_DBUS_SYSTEM_BUS=OFF
+endif
+
 $(eval $(cmake-package))
diff --git a/package/libwpe/Config.in b/package/libwpe/Config.in
index c11c853..092898c 100644
--- a/package/libwpe/Config.in
+++ b/package/libwpe/Config.in
@@ -1,13 +1,10 @@
-comment "libwpe needs a toolchain w/ C++, dynamic library and an OpenEGL-capable backend"
-	depends on !BR2_PACKAGE_HAS_LIBEGL || !BR2_INSTALL_LIBSTDCPP || BR2_STATIC_LIBS
-
 config BR2_PACKAGE_LIBWPE
 	bool "libwpe"
-	depends on !BR2_STATIC_LIBS # dlfcn.h
 	depends on BR2_INSTALL_LIBSTDCPP
-	depends on BR2_PACKAGE_HAS_LIBEGL
+	depends on BR2_PACKAGE_HAS_LIBEGL # uses eglplatform.h
+	depends on !BR2_STATIC_LIBS       # uses libdl
 	select BR2_PACKAGE_LIBXKBCOMMON
 	help
 	  Base library for the WPE WebKit port.
 
-	  https://wpewebkit.org/
+	  https://github.com/WebPlatformForEmbedded/libwpe
diff --git a/package/libwpe/libwpe.hash b/package/libwpe/libwpe.hash
index 58dba92..ff2d7ad 100644
--- a/package/libwpe/libwpe.hash
+++ b/package/libwpe/libwpe.hash
@@ -2,6 +2,3 @@
 md5 b5ea32bd644811d5c6433cf1439763f7 libwpe-1.0.0.tar.xz
 sha1 6e51591c00a9a6128e19920807e6874794c723fd libwpe-1.0.0.tar.xz
 sha256 aff11612123f9ab85a8b9a4bcdfb3a7503eba0a0d2d96f2cdecd30e911091719 libwpe-1.0.0.tar.xz
-
-# Hashes for license files:
-sha256 6efc9991641b47b1f4e727db7f090d0ade00117dcbbc74be622f2baceddb1f22 COPYING
diff --git a/package/libwpe/libwpe.mk b/package/libwpe/libwpe.mk
index aad1214..16016cd 100644
--- a/package/libwpe/libwpe.mk
+++ b/package/libwpe/libwpe.mk
@@ -7,9 +7,8 @@
 LIBWPE_VERSION = 1.0.0
 LIBWPE_SITE = https://wpewebkit.org/releases
 LIBWPE_SOURCE = libwpe-$(LIBWPE_VERSION).tar.xz
-LIBWPE_INSTALL_STAGING = YES
 LIBWPE_LICENSE = BSD-2-Clause
-LIBWPE_LICENSE_FILES = COPYING
+LIBWPE_INSTALL_STAGING = YES
 LIBWPE_DEPENDENCIES = libegl libxkbcommon
 
 # Workaround for https://github.com/raspberrypi/userland/issues/316
diff --git a/package/wpebackend-fdo/Config.in b/package/wpebackend-fdo/Config.in
index 161e4c9..f2bc179 100644
--- a/package/wpebackend-fdo/Config.in
+++ b/package/wpebackend-fdo/Config.in
@@ -1,19 +1,8 @@
-comment "wpebackend-fdo needs a toolchain w/ C++, wchar, threads, dynamic library and an OpenEGL-capable Wayland backend"
-	depends on !BR2_PACKAGE_HAS_LIBEGL_WAYLAND || !BR2_INSTALL_LIBSTDCPP || !BR2_USE_WCHAR \
-		|| !BR2_TOOLCHAIN_HAS_THREADS || BR2_STATIC_LIBS
-
 config BR2_PACKAGE_WPEBACKEND_FDO
 	bool "wpebackend-fdo"
-	depends on !BR2_STATIC_LIBS # wayland
-	depends on BR2_INSTALL_LIBSTDCPP
-	depends on BR2_TOOLCHAIN_HAS_THREADS # wayland, libglib2
-	depends on BR2_USE_WCHAR # libglib2
-	depends on BR2_USE_MMU # libglib2
-	depends on BR2_PACKAGE_HAS_LIBEGL_WAYLAND
+	depends on BR2_PACKAGE_HAS_LIBEGL
 	select BR2_PACKAGE_LIBGLIB2
 	select BR2_PACKAGE_LIBWPE
 	select BR2_PACKAGE_WAYLAND
 	help
-	  WPEBackend interface using freedesktop.org API.
-
-	  https://wpewebkit.org/
+	  WPEBackend interface using freedesktop.org APIs
diff --git a/package/wpebackend-fdo/wpebackend-fdo.hash b/package/wpebackend-fdo/wpebackend-fdo.hash
index 6e6f9f0..4557ff6 100644
--- a/package/wpebackend-fdo/wpebackend-fdo.hash
+++ b/package/wpebackend-fdo/wpebackend-fdo.hash
@@ -1,7 +1,4 @@
-# From https://wpewebkit.org/releases/wpebackend-fdo-1.0.1.tar.xz.sums
-md5 2ee81a4212c18110a06a0c51c12e0d2e wpebackend-fdo-1.0.1.tar.xz
-sha1 cdc6ac95e302a2358204b766936a9bf8ef4f26f2 wpebackend-fdo-1.0.1.tar.xz
-sha256 15b8b1febea5d9c271e95c35b3c1e13f870712a54bc5f689cfdbb96e2f070fc8 wpebackend-fdo-1.0.1.tar.xz
-
-# Hashes for license files:
-sha256 c9f6803371047fad3e72200ec6cd226329a5ee08ac61104c8211c2761fb46825 COPYING
+# From https://wpewebkit.org/releases/wpebackend-fdo-1.0.0.tar.xz.sums
+md5 5318728afb3bf7417293af67ce427963 wpebackend-fdo-1.0.0.tar.xz
+sha1 7ee22bc1d585616f4ad2047d8be54ec396486211 wpebackend-fdo-1.0.0.tar.xz
+sha256 7a747f87a1ae46d30144369050e3ce348b58986d04e1a139ba75c198fa636729 wpebackend-fdo-1.0.0.tar.xz
diff --git a/package/wpebackend-fdo/wpebackend-fdo.mk b/package/wpebackend-fdo/wpebackend-fdo.mk
index 5842861..aa8997f 100644
--- a/package/wpebackend-fdo/wpebackend-fdo.mk
+++ b/package/wpebackend-fdo/wpebackend-fdo.mk
@@ -4,12 +4,11 @@
 #
 ################################################################################
 
-WPEBACKEND_FDO_VERSION = 1.0.1
+WPEBACKEND_FDO_VERSION = 1.0.0
 WPEBACKEND_FDO_SITE = https://wpewebkit.org/releases
 WPEBACKEND_FDO_SOURCE = wpebackend-fdo-$(WPEBACKEND_FDO_VERSION).tar.xz
-WPEBACKEND_FDO_INSTALL_STAGING = YES
 WPEBACKEND_FDO_LICENSE = BSD-2-Clause
-WPEBACKEND_FDO_LICENSE_FILES = COPYING
-WPEBACKEND_FDO_DEPENDENCIES = libglib2 libwpe wayland
+WPEBACKEND_FDO_INSTALL_STAGING = YES
+WPEBACKEND_FDO_DEPENDENCIES = libegl libglib2 libwpe wayland
 
 $(eval $(cmake-package))
diff --git a/package/wpewebkit/Config.in b/package/wpewebkit/Config.in
index 39f64c4..443c158 100644
--- a/package/wpewebkit/Config.in
+++ b/package/wpewebkit/Config.in
@@ -2,7 +2,7 @@ config BR2_PACKAGE_WPEWEBKIT_ARCH_SUPPORTS
 	bool
 	# ARM needs BLX, so v5t+, BE completely untested so disabled
 	default y if BR2_arm && !BR2_ARM_CPU_ARMV4
-	default y if BR2_aarch64 || BR2_aarch64_be
+	default y if BR2_aarch64
 	default y if BR2_i386 || BR2_x86_64
 	# Disabled on MIPS big endian due to sigbus
 	default y if BR2_mipsel || BR2_mips64el
@@ -12,48 +12,24 @@ config BR2_PACKAGE_WPEWEBKIT_ARCH_SUPPORTS
 	depends on BR2_TOOLCHAIN_HAS_SYNC_4
 	depends on BR2_PACKAGE_LIBGPG_ERROR_ARCH_SUPPORTS # libgcrypt
 
-config BR2_PACKAGE_WPEWEBKIT_ARCH_SUPPORTS_JIT
-	bool
-	# ARM needs NEON for JIT.
-	default y if BR2_ARM_CPU_HAS_NEON
-	# AArch64 is supported upstream but not well tested on big-endian mode.
-	default y if BR2_aarch64
-	# i386 & x86_64 don't have any special requirements.
-	default y if BR2_i386
-	default y if BR2_x86_64
-	# JIT is known not to work on MIPS64.
-	# Plain MIPS32 (pre R2) is not well tested and likely broken, and R6
-	# is unsupported, see https://bugs.webkit.org/show_bug.cgi?id=191258
-	# The MIPS support is completely untested in big-endian mode.
-	default y if BR2_mipsel && BR2_MIPS_CPU_MIPS32R2
-	default y if BR2_mipsel && BR2_MIPS_CPU_MIPS32R5
-
-comment "wpewebkit needs a toolchain w/ C++, wchar, threads, dynamic library, gcc >= 6, host gcc >= 4.8"
-	depends on BR2_PACKAGE_WPEWEBKIT_ARCH_SUPPORTS
-	depends on !BR2_BINFMT_FLAT
-	depends on !BR2_INSTALL_LIBSTDCPP || !BR2_USE_WCHAR \
-		|| !BR2_TOOLCHAIN_HAS_THREADS || BR2_STATIC_LIBS \
-		|| !BR2_TOOLCHAIN_GCC_AT_LEAST_6 || !BR2_HOST_GCC_AT_LEAST_4_8
-
-comment "wpewebkit needs an OpenGL ES w/ EGL-capable Wayland backend"
+comment "wpewebkit needs a glibc toolchain w/ C++, OpenGL backend, gcc >= 6, host gcc >= 4.8"
 	depends on BR2_PACKAGE_WPEWEBKIT_ARCH_SUPPORTS
-	depends on !BR2_BINFMT_FLAT
-	depends on !BR2_PACKAGE_HAS_LIBGLES || !BR2_PACKAGE_HAS_LIBEGL \
-		|| !BR2_PACKAGE_HAS_LIBEGL_WAYLAND
+	depends on !BR2_INSTALL_LIBSTDCPP || \
+		!BR2_TOOLCHAIN_USES_GLIBC || \
+		!BR2_HOST_GCC_AT_LEAST_4_8 || \
+		!BR2_TOOLCHAIN_GCC_AT_LEAST_6 || \
+		!BR2_PACKAGE_HAS_LIBEGL || \
+		!BR2_PACKAGE_HAS_LIBGLES
+	depends on BR2_USE_MMU
 
 config BR2_PACKAGE_WPEWEBKIT
 	bool "wpewebkit"
-	depends on !BR2_STATIC_LIBS # wayland
-	depends on !BR2_BINFMT_FLAT # icu
-	depends on BR2_INSTALL_LIBSTDCPP # harfbuzz, icu
-	depends on BR2_TOOLCHAIN_HAS_THREADS # wayland, icu, libsoup
-	depends on BR2_TOOLCHAIN_GCC_AT_LEAST_6
+	depends on BR2_INSTALL_LIBSTDCPP
 	depends on BR2_HOST_GCC_AT_LEAST_4_8 # icu
-	depends on BR2_USE_WCHAR # icu, libsoup
-	depends on BR2_PACKAGE_HAS_LIBGLES # libepoxy
-	depends on BR2_PACKAGE_HAS_LIBEGL # libepoxy
-	depends on BR2_PACKAGE_HAS_LIBEGL_WAYLAND # wpebackend-fdo
+	depends on BR2_TOOLCHAIN_GCC_AT_LEAST_6
+	depends on BR2_TOOLCHAIN_USES_GLIBC
 	depends on BR2_PACKAGE_WPEWEBKIT_ARCH_SUPPORTS
+	depends on BR2_PACKAGE_HAS_LIBEGL # libepoxy
 	select BR2_PACKAGE_CAIRO
 	select BR2_PACKAGE_CAIRO_PNG
 	select BR2_PACKAGE_HARFBUZZ
@@ -63,28 +39,80 @@ config BR2_PACKAGE_WPEWEBKIT
 	select BR2_PACKAGE_LIBGCRYPT
 	select BR2_PACKAGE_LIBPNG
 	select BR2_PACKAGE_LIBSOUP
-	select BR2_PACKAGE_LIBTASN1
-	select BR2_PACKAGE_LIBXSLT
-	select BR2_PACKAGE_WAYLAND
-	select BR2_PACKAGE_WAYLAND_PROTOCOLS
+	select BR2_PACKAGE_LIBWPE
+	select BR2_PACKAGE_LIBXML2
+	select BR2_PACKAGE_SQLITE
 	select BR2_PACKAGE_WEBP
 	select BR2_PACKAGE_WEBP_DEMUX
-	select BR2_PACKAGE_WPEBACKEND_FDO
+	select BR2_PACKAGE_WOFF2
 	help
-	  WPE (Web Platform for Embedded) port of the WebKit engine,
-	  to allow embedders to create simple and performant systems
-	  based on Web platform technologies.
+	  WebKit is an open source, standards compliant web browser
+	  engine. The WPE port is specifically aimed towards usage in
+	  embedded devices.
 
-	  https://wpewebkit.org/
+	  http://wpewebkit.org/
 
 if BR2_PACKAGE_WPEWEBKIT
 
+config BR2_PACKAGE_WPEWEBKIT_MINIBROWSER
+	bool "MiniBrowser"
+	depends on BR2_PACKAGE_WPEBACKEND_FDO || BR2_PACKAGE_WPEBACKEND_RDK
+	help
+	  Use MiniBrowser as WPE launcher.
+
+comment "MiniBrowser needs a WPEBackend"
+	depends on !BR2_PACKAGE_WPEBACKEND_FDO && !BR2_PACKAGE_WPEBACKEND_RDK
+
+if BR2_PACKAGE_WPEWEBKIT_MINIBROWSER
+
+choice
+	prompt "Backend Type"
+	default BR2_PACKAGE_WPEWEBKIT_MINIBROWSER_BACKEND_DEFAULT
+
+config BR2_PACKAGE_WPEWEBKIT_MINIBROWSER_BACKEND_DEFAULT
+	bool "Default WPE Backend"
+	help
+	  MiniBrowser will use default WPE backend.
+
+config BR2_PACKAGE_WPEWEBKIT_MINIBROWSER_BACKEND_FDO
+	bool "FDO Backend"
+	depends on BR2_PACKAGE_WPEBACKEND_FDO && BR2_PACKAGE_WAYLAND && BR2_PACKAGE_MESA3D_OPENGL_EGL
+	help
+	  MiniBrowser will use FDO backend.
+
+endchoice
+
+comment "FDO backend needs OpenGL implementation like MESA3D which supports WAYLAND EGL "
+	depends on !BR2_PACKAGE_MESA3D_OPENGL_EGL
+
+endif
+
+config BR2_PACKAGE_WPEWEBKIT_BUILD_JSC
+	bool "build jsc"
+	help
+	  Builds and install the "jsc" interactive JavaScript shell.
+
+config BR2_PACKAGE_WPEWEBKIT_HTTPS
+	bool "HTTPS support"
+	default y
+	depends on !BR2_STATIC_LIBS # gnutls -> libsoup
+	select BR2_PACKAGE_CA_CERTIFICATES # runtime
+	select BR2_PACKAGE_LIBSOUP_SSL
+	help
+	  Enable HTTP protocol support.
+
+comment "wpewebkit https support needs a toolchain w/ dynamic library"
+	depends on BR2_STATIC_LIBS
+
 config BR2_PACKAGE_WPEWEBKIT_MULTIMEDIA
 	bool "multimedia support"
 	select BR2_PACKAGE_GSTREAMER1
 	select BR2_PACKAGE_GST1_PLUGINS_BAD
+	select BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_GL if BR2_PACKAGE_HAS_LIBEGL || BR2_PACKAGE_HAS_LIBGL
 	select BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_MPEGTSDEMUX
+	select BR2_PACKAGE_GST1_PLUGINS_BAD_LIB_OPENGL if BR2_PACKAGE_HAS_LIBEGL || BR2_PACKAGE_HAS_LIBGL
 	select BR2_PACKAGE_GST1_PLUGINS_BASE
+	select BR2_PACKAGE_GST1_PLUGINS_BASE_LIB_OPENGL if BR2_PACKAGE_HAS_LIBGL || BR2_PACKAGE_HAS_LIBGLES
 	select BR2_PACKAGE_GST1_PLUGINS_BASE_PLUGIN_ALSA
 	select BR2_PACKAGE_GST1_PLUGINS_BASE_PLUGIN_APP
 	select BR2_PACKAGE_GST1_PLUGINS_BASE_PLUGIN_AUDIOCONVERT
@@ -103,25 +131,26 @@ config BR2_PACKAGE_WPEWEBKIT_MULTIMEDIA
 	  This option pulls in all of the required dependencies
 	  to enable multimedia (video/audio) support.
 
-if BR2_PACKAGE_WPEWEBKIT_MULTIMEDIA
-
-config BR2_PACKAGE_WPEWEBKIT_USE_GSTREAMER_GL
-	bool "use gstreamer-gl"
+config BR2_PACKAGE_WPEWEBKIT_WEBCRYPTO
+	bool "WebCrypto support"
 	default y
-	depends on BR2_PACKAGE_GST1_PLUGINS_BASE_HAS_LIB_OPENGL
-	select BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_GL
+	select BR2_PACKAGE_LIBTASN1
 	help
-	  Use the GStreamer GL elements for handling video content.
-	  This is recommended as it improves performance of video
-	  playback. In some target configurations incorrect rendering
-	  might be produced, and disabling this option may help.
-
-endif
+	  Enable support for the WebCrypto API. This will add libtasn1
+	  as a dependency.
 
 config BR2_PACKAGE_WPEWEBKIT_WEBDRIVER
 	bool "WebDriver support"
+	default y
 	help
 	  Enable support for WebDriver. This will build and install the
 	  WebKitWebDriver program in the target.
 
+config BR2_PACKAGE_WPEWEBKIT_XSLT
+	bool "XSLT support"
+	default y
+	select BR2_PACKAGE_LIBXSLT
+	help
+	  Enable support for XSLT. This adds libxslt2 as a dependecy.
+
 endif
diff --git a/package/wpewebkit/wpewebkit.hash b/package/wpewebkit/wpewebkit.hash
index cbf253d..e51fead 100644
--- a/package/wpewebkit/wpewebkit.hash
+++ b/package/wpewebkit/wpewebkit.hash
@@ -1,8 +1,4 @@
-# From https://wpewebkit.org/releases/wpewebkit-2.22.5.tar.xz.sums
-md5 7b768bfae1295ebbc9a9038bf8fb6e6c wpewebkit-2.22.5.tar.xz
-sha1 c85f927e0f17f1e7045a5d33c683d310c7af24de wpewebkit-2.22.5.tar.xz
-sha256 d5e7b23e4f9e9f1b9d369faa4d527cdb59aef56b3e6a50a16dad243df5f699f3 wpewebkit-2.22.5.tar.xz
-
-# Hashes for license files:
-sha256 0b5d3a7cc325942567373b0ecd757d07c132e0ebd7c97bfc63f7e1a76094edb4 Source/WebCore/LICENSE-APPLE
-sha256 f2b3bd09663381deb99721109d22b47af1213bb43007a8b56a06c6375c8050ce Source/WebCore/LICENSE-LGPL-2.1
+# From https://wpewebkit.org/releases/wpewebkit-2.22.2.tar.xz.sums
+md5 69c29ce376208b62b0cc43b750e27afb wpewebkit-2.22.2.tar.xz
+sha1 6ff4a3092ffff5e7600d00040984f988a76c6dc3 wpewebkit-2.22.2.tar.xz
+sha256 56dced284e9fe71a7c56abc881b240251863472aed41c3e32ee3b071c21e56a9 wpewebkit-2.22.2.tar.xz
diff --git a/package/wpewebkit/wpewebkit.mk b/package/wpewebkit/wpewebkit.mk
index 73ad534..8c1a660 100644
--- a/package/wpewebkit/wpewebkit.mk
+++ b/package/wpewebkit/wpewebkit.mk
@@ -4,24 +4,25 @@
 #
 ################################################################################
 
-WPEWEBKIT_VERSION = 2.22.5
-WPEWEBKIT_SITE = http://www.wpewebkit.org/releases
+WPEWEBKIT_VERSION = 2.22.2
+WPEWEBKIT_SITE = https://www.wpewebkit.org/releases
 WPEWEBKIT_SOURCE = wpewebkit-$(WPEWEBKIT_VERSION).tar.xz
 WPEWEBKIT_INSTALL_STAGING = YES
-WPEWEBKIT_LICENSE = LGPL-2.1+, BSD-2-Clause
+WPEWEBKIT_LICENSE = LGPv2.1+, BSD-2-Clause
 WPEWEBKIT_LICENSE_FILES = \
 	Source/WebCore/LICENSE-APPLE \
 	Source/WebCore/LICENSE-LGPL-2.1
-WPEWEBKIT_DEPENDENCIES = host-gperf host-python host-ruby \
-	harfbuzz cairo icu jpeg libepoxy libgcrypt libgles libsoup libtasn1 \
-	libpng libxslt wayland-protocols webp wpebackend-fdo
+WPEWEBKIT_DEPENDENCIES = host-cmake host-ruby host-flex host-bison \
+	host-gperf harfbuzz icu jpeg libegl libepoxy libgcrypt libsoup \
+	libxml2 libwpe sqlite webp
+WPEWEBKIT_CONF_OPTS = -DPORT=WPE
 
-WPEWEBKIT_CONF_OPTS = \
-	-DPORT=WPE \
-	-DENABLE_API_TESTS=OFF \
-	-DENABLE_MINIBROWSER=OFF
-
-ifeq ($(BR2_PACKAGE_WPEWEBKIT_ARCH_SUPPORTS_JIT),y)
+# JSC JIT is supported on: i386, x86_64, aarch64 and mips32le target archs.
+# For target arch arm (32) it is only supported on ARMv7 CPUs and ARMv8 CPUs,
+# and is recommended to generate a Thumb2 build (as upstream tests more this)
+ifeq ($(BR2_i386)$(BR2_x86_64)$(BR2_aarch64)$(BR2_mipsel),y)
+WPEWEBKIT_CONF_OPTS += -DENABLE_JIT=ON
+else ifeq ($(BR2_ARM_CPU_ARMV7A)$(BR2_ARM_CPU_ARMV8A)$(BR2_ARM_CPU_ARMV8),y)
 WPEWEBKIT_CONF_OPTS += -DENABLE_JIT=ON
 else
 WPEWEBKIT_CONF_OPTS += -DENABLE_JIT=OFF
@@ -30,19 +31,34 @@ endif
 ifeq ($(BR2_PACKAGE_WPEWEBKIT_MULTIMEDIA),y)
 WPEWEBKIT_CONF_OPTS += \
 	-DENABLE_VIDEO=ON \
-	-DENABLE_WEB_AUDIO=ON
-WPEWEBKIT_DEPENDENCIES += gstreamer1 gst1-libav gst1-plugins-base gst1-plugins-good
+	-DENABLE_WEB_AUDIO=ON \
+	-DENABLE_MEDIA_SOURCE=ON
+WPEWEBKIT_DEPENDENCIES += gstreamer1 gst1-libav gst1-plugins-base \
+	gst1-plugins-good gst1-plugins-bad
 else
 WPEWEBKIT_CONF_OPTS += \
 	-DENABLE_VIDEO=OFF \
-	-DENABLE_WEB_AUDIO=OFF
+	-DENABLE_WEB_AUDIO=OFF \
+	-DENABLE_MEDIA_SOURCE=OFF
 endif
 
-ifeq ($(BR2_PACKAGE_WPEWEBKIT_USE_GSTREAMER_GL),y)
-WPEWEBKIT_CONF_OPTS += -DUSE_GSTREAMER_GL=ON
-WPEWEBKIT_DEPENDENCIES += gst1-plugins-bad
+ifeq ($(BR2_PACKAGE_WPEBACKEND_FDO),y)
+    WPEWEBKIT_DEPENDENCIES += wpebackend-fdo
+endif
+
+ifeq ($(BR2_PACKAGE_WPEBACKEND_RDK),y)
+    WPEWEBKIT_DEPENDENCIES += wpebackend-rdk
+endif
+
+ifeq ($(BR2_PACKAGE_WPEWEBKIT_HTTPS),y)
+WPEWEBKIT_DEPENDENCIES += glib-networking
+endif
+
+ifeq ($(BR2_PACKAGE_WPEWEBKIT_WEBCRYPTO),y)
+WPEWEBKIT_CONF_OPTS += -DENABLE_WEB_CRYPTO=ON
+WPEWEBKIT_DEPENDENCIES += libtasn1
 else
-WPEWEBKIT_CONF_OPTS += -DUSE_GSTREAMER_GL=OFF
+WPEWEBKIT_CONF_OPTS += -DENABLE_WEB_CRYPTO=OFF
 endif
 
 ifeq ($(BR2_PACKAGE_WPEWEBKIT_WEBDRIVER),y)
@@ -51,6 +67,27 @@ else
 WPEWEBKIT_CONF_OPTS += -DENABLE_WEBDRIVER=OFF
 endif
 
+ifeq ($(BR2_PACKAGE_WPEWEBKIT_XSLT),y)
+WPEWEBKIT_CONF_OPTS += -DENABLE_XSLT=ON
+WPEWEBKIT_DEPENDENCIES += libxslt
+else
+WPEWEBKIT_CONF_OPTS += -DENABLE_XSLT=OFF
+endif
+
+#MiniBrowser and its Backend
+ifeq ($(BR2_PACKAGE_WPEWEBKIT_MINIBROWSER),y)
+WPEWEBKIT_CONF_OPTS += -DENABLE_MINIBROWSER=ON
+ifeq ($(BR2_PACKAGE_WPEWEBKIT_MINIBROWSER_BACKEND_FDO),y)
+WPEWEBKIT_CONF_OPTS += \
+	-DUSE_MINIBROWSER_BACKEND_FDO=ON
+else ifeq ($(BR2_PACKAGE_WPEWEBKIT_MINIBROWSER_BACKEND_DEFAULT),y)
+WPEWEBKIT_CONF_OPTS += \
+	-DUSE_MINIBROWSER_BACKEND_DEFAULT=ON
+endif
+else
+WPEWEBKIT_CONF_OPTS += -DENABLE_MINIBROWSER=OFF
+endif
+
 ifeq ($(BR2_PACKAGE_WOFF2),y)
 WPEWEBKIT_CONF_OPTS += -DUSE_WOFF2=ON
 WPEWEBKIT_DEPENDENCIES += woff2
@@ -58,4 +95,32 @@ else
 WPEWEBKIT_CONF_OPTS += -DUSE_WOFF2=OFF
 endif
 
+define WPEWEBKIT_BUILD_JSC
+	$(WPEWEBKIT_MAKE_ENV) $(WPEWEBKIT_MAKE) -C $(@D) jsc
+endef
+
+define WPEWEBKIT_INSTALL_JSC
+	install -Dm755 $(@D)/bin/jsc $(TARGET_DIR)/usr/bin/jsc
+	$(STRIPCMD) $(TARGET_DIR)/usr/bin/jsc
+endef
+
+define WPEWEBKIT_INSTALL_JSC_STAGING
+	install -Dm755 $(@D)/bin/jsc $(STAGING_DIR)/usr/bin/jsc
+	cd $(@D) && DESTDIR=$(STAGING_DIR) $(HOST_DIR)/usr/bin/cmake \
+			-DCOMPONENT=Development \
+			-P $(WPEWEBKIT_BUILDDIR)/Source/JavaScriptCore/cmake_install.cmake
+endef
+
+ifeq ($(BR2_PACKAGE_WPEWEBKIT_BUILD_JSC),y)
+WPEWEBKIT_POST_BUILD_HOOKS += WPEWEBKIT_BUILD_JSC
+WPEWEBKIT_POST_INSTALL_TARGET_HOOKS += WPEWEBKIT_INSTALL_JSC
+WPEWEBKIT_POST_INSTALL_STAGING_HOOKS += WPEWEBKIT_INSTALL_JSC_STAGING
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_GL),y)
+WPEWEBKIT_CONF_OPTS += -DUSE_GSTREAMER_GL=ON
+else
+WPEWEBKIT_CONF_OPTS += -DUSE_GSTREAMER_GL=OFF
+endif
+
 $(eval $(cmake-package))
